plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.eventty'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	// spring boot
	implementation ('org.springframework.boot:spring-boot-starter-web')
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation ('org.springframework.boot:spring-boot-starter-validation')
	implementation ('org.springframework.boot:spring-boot-starter-aop')

	// database
	runtimeOnly ('com.mysql:mysql-connector-j')

	// redis
	implementation('org.springframework.boot:spring-boot-starter-data-redis')

	// lombok
	compileOnly ('org.projectlombok:lombok')
	annotationProcessor ('org.projectlombok:lombok')

	// Bcrypt
	implementation("org.mindrot:jbcrypt:0.4")

	// mail
	implementation ('org.springframework.boot:spring-boot-starter-mail')

	// thymeleaf(for email)
	implementation ('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation ('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect')

	// swagger
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0")

	// Embedded test
	testImplementation("ch.vorburger.mariaDB4j:mariaDB4j:3.2.0")
	testImplementation("org.mariadb.jdbc:mariadb-java-client:3.5.3")

	// JWT
	implementation("io.jsonwebtoken:jjwt-api:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

	// test
	testImplementation ('org.springframework.boot:spring-boot-starter-test')
	testRuntimeOnly ('org.junit.platform:junit-platform-launcher')
}

tasks.named('test') {
	useJUnitPlatform()
}
